##########################################################
#### Remove all configuration and whitelist files not ####
#### implicitly or explicitly declared in streams.    ####
##########################################################
- name: Get list of all config files recursively on server
  find:
    path: "{{ syslog_path_configs }}"
    file_type: any
    recurse: yes
  register: all_objects

- name: Get list of all whitelist files recursively on server
  find:
    path: "{{ syslog_path_whitelists }}"
    file_type: any
    recurse: yes
  register: all_objects_under_whitelist

- name: Delete all unmanaged files and directories in {{ syslog_path_configs }}
  file: path="{{ item.path }}" state=absent
  with_items: "{{ all_objects['files'] }}"
  when: item.path not in managed_configs

- name: Delete all unmanaged files and directories in {{ syslog_path_whitelists }}
  file: path="{{ item.path }}" state=absent
  with_items: "{{ all_objects_under_whitelist['files'] }}"
  when: item.path not in managed_whitelists


##########################################################
#### Deploy Filters (whitelists)                      ####
##########################################################
- name: Ensure all whitelists are at the latest version
  copy:
    src: "{{ whitelist_src_filename }}"
    dest: "/etc/syslog-ng/whitelists/"
    owner: "root"
    group: "root"
    mode: 0644
  vars:
    whitelist_src_filename: "whitelists/f_whitelist_{{ item.value.whitelist | default('default') }}.txt"
  with_dict: "{{ soc_streams_properties }}"
  when: inventory_hostname in item.value.deploy_hosts
  notify:
    - Reload syslog-ng


##########################################################
#### Deploy main syslog config file                   ####
#### This file calls all configs present in conf.d/   ####
##########################################################
- name: Ensure main syslog-ng.conf file is at the latest version
  copy:
    src: "syslog-ng.conf"
    dest: "/etc/syslog-ng/syslog-ng.conf"
    owner: "root"
    group: "root"
    mode: 0644
  notify:
    - Restart syslog-ng


##########################################################
#### Deploy each stream configs                       ####
#### Deploys in conf.d/ folder                        ####
##########################################################
- name: Ensure all conf.d/*.conf files are at the latest version
  template:
    src: "soc_streams/{{ item.value.template }}.conf.j2"
    dest: "/etc/syslog-ng/conf.d/{{ item.key }}.conf"
    owner: "root"
    group: "root"
    mode: 0644
  vars:
    stream_properties: "{{ item.value }}"
  when: inventory_hostname in item.value.deploy_hosts
  with_dict: "{{ soc_streams_properties }}"
  notify:
    - Restart syslog-ng


##########################################################
#### ==Surviving failures==                           ####
#### If reloading syslog-ng fails while deploying on  ####
#### dev, upon a second execution of the playbook     ####
#### without performing any changes on files will say ####
#### 'changes=0' and syslog-ng service will have      ####
#### stayed with old state (stopped). The playbook    ####
#### will not restart any service because there will  ####
#### be no change in the files and it will say that   ####
#### it has succeeded even though it should not! This ####
#### can be problematic if we are using a pipeline    ####
#### (i.e. gitlab-ci) as the pipeline might           ####
#### essentially deploy to production a wrong         ####
#### configuration if runned twice in a row! To avoid ####
#### this, the following tasks will try to start the  ####
#### service if not already started.                  ####
#### Reloading will not make the service crash if the ####
#### service is up even if the config is wrong. It    ####
#### will instead just discard the new config and     ####
#### will stay up. Although if the state of the       ####
#### service is down, it will try to start it AND it  ####
#### will fail ! We do a reload here and not restart  ####
#### as it is a much softer action and can get us the ####
#### result we want if the service is already down.   ####
##########################################################
- debug:
    msg: "Triggering syslog-ng service reload no matter what to survive failures"
  changed_when: True
  notify:
    - Reload syslog-ng
